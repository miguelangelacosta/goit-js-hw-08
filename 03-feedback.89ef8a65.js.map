{"mappings":"AAiDE,MAAMA,EAAOC,SAASC,cAAc,kBACpCF,EAAKG,iBACH,QACAC,EAAEC,UAvCH,WACC,MAAMC,EAAOL,SAASC,cAAc,kBAG9BK,EAAW,C,MAFHD,EAAKE,SAASC,MAAMC,M,QAClBJ,EAAKE,SAASG,QAAQD,OAEtCE,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUR,G,GAkCjC,MAI3BS,OAAMb,iBAAiB,QAlCvB,WACC,MAAMc,EAAgBL,aAAaM,QAAQ,uBAC3C,GAAID,EAAe,CACjB,MAAMR,MAAEA,EAAKE,QAAEA,GAAYG,KAAKK,MAAMF,GAChCG,EAAOnB,SAASC,cAAc,kBACpCkB,EAAKZ,SAASC,MAAMC,MAAQD,EAC5BW,EAAKZ,SAASG,QAAQD,MAAQC,C,KA+BlCX,EAAKG,iBAAiB,UArBpB,SAAwBkB,GACxBA,EAAMC,iBACN,MAAMC,EAAOtB,SAASC,cAAc,kBAC9BO,EAAQc,EAAKf,SAASC,MAAMC,MAC5BC,EAAUY,EAAKf,SAASG,QAAQD,MACtCc,QAAQC,IAAI,C,MAAEhB,E,QAAOE,IATrBC,aAAac,WAAW,uBAWxBH,EAAKI,O","sources":["src/js/03-feedback.js"],"sourcesContent":["// Comprobar si el almacenamiento local es compatible en el navegador\nfunction isLocalStorageSupported() {\n    try {\n      const key = \"__test_key__\";\n      localStorage.setItem(key, key);\n      localStorage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  \n  // Función para guardar el estado del formulario en el almacenamiento local\n  function saveFormState() {\n    const form = document.querySelector(\".feedback-form\");\n    const email = form.elements.email.value;\n    const message = form.elements.message.value;\n    const formData = { email, message };\n    localStorage.setItem(\"feedback-form-state\", JSON.stringify(formData));\n  }\n  \n  // Función para cargar el estado del formulario desde el almacenamiento local\n  function loadFormState() {\n    const savedFormData = localStorage.getItem(\"feedback-form-state\");\n    if (savedFormData) {\n      const { email, message } = JSON.parse(savedFormData);\n      const form = document.querySelector(\".feedback-form\");\n      form.elements.email.value = email;\n      form.elements.message.value = message;\n    }\n  }\n  \n  // Función para borrar el estado del formulario del almacenamiento local\n  function clearFormState() {\n    localStorage.removeItem(\"feedback-form-state\");\n  }\n  \n  // Función para manejar el envío del formulario\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    const form = document.querySelector(\".feedback-form\");\n    const email = form.elements.email.value;\n    const message = form.elements.message.value;\n    console.log({ email, message });\n    clearFormState();\n    form.reset();\n  }\n  \n  // Monitorizar el evento \"input\" en el formulario utilizando lodash.throttle para limitar la frecuencia\n  const form = document.querySelector(\".feedback-form\");\n  form.addEventListener(\n    \"input\",\n    _.throttle(saveFormState, 500)\n  );\n  \n  // Cargar el estado del formulario cuando la página se carga\n  window.addEventListener(\"load\", loadFormState);\n  \n  // Manejar el envío del formulario\n  form.addEventListener(\"submit\", handleFormSubmit);\n  \n"],"names":["$945622fd0f572e60$var$form","document","querySelector","addEventListener","_","throttle","form1","formData","elements","email","value","message","localStorage","setItem","JSON","stringify","window","savedFormData","getItem","parse","form2","event","preventDefault","form3","console","log","removeItem","reset"],"version":3,"file":"03-feedback.89ef8a65.js.map"}